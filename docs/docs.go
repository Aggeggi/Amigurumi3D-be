// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/amigurumi": {
            "get": {
                "description": "Get list of amigurumis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "amigurumi"
                ],
                "summary": "List of amigurumis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.AmigurumiPatternWithIdResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new amigurumi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "amigurumi"
                ],
                "summary": "Insert an amigurumi in db",
                "parameters": [
                    {
                        "description": "amigurumi info",
                        "name": "amigurumi",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AmigurumiPattern"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/amigurumi/{id}": {
            "get": {
                "description": "Get a pattern for an amigurumi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "amigurumi"
                ],
                "summary": "Amigurumi pattern",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Amigurumi ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.AmigurumiPatternResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Logout a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "Ping healthcheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.AmigurumiLayer": {
            "type": "object",
            "properties": {
                "pattern": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.StitchType"
                    }
                },
                "times": {
                    "type": "integer"
                }
            }
        },
        "entities.AmigurumiLayerContainer": {
            "type": "object",
            "properties": {
                "layers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.AmigurumiLayer"
                    }
                },
                "times": {
                    "type": "integer"
                }
            }
        },
        "entities.StitchType": {
            "type": "string",
            "enum": [
                "SC",
                "INC",
                "DEC"
            ],
            "x-enum-varnames": [
                "SC",
                "INC",
                "DEC"
            ]
        },
        "requests.AmigurumiPattern": {
            "type": "object",
            "properties": {
                "layers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.AmigurumiLayerContainer"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "requests.UserRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "responses.AmigurumiPatternResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "layers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.AmigurumiLayerContainer"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "responses.AmigurumiPatternWithIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Amigurumi 3D",
	Description:      "This is a server for the amigurumi 3D app",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
